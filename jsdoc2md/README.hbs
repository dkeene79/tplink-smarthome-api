<!-- markdownlint-disable MD007 MD012 MD033 -->

# tplink-smarthome-api

[![NPM Version](https://img.shieldsio/npm/v/tplink-smarthome-api.svg)](https://www.npmjs.com/package/tplink-smarthome-api)
[![Build Status](https://travis-ci.org/plasticrake/tplink-smarthome-api.svg?branch=master)](https://travis-ci.org/plasticrake/tplink-smarthome-api)
[![codecov](https://codecov.io/gh/plasticrake/tplink-smarthome-api/branch/master/graph/badge.svg)](https://codecov.io/gh/plasticrake/tplink-smarthome-api)
[![js-semistandard-style](https://img.shields.io/badge/code%20style-semistandard-brightgreen.svg?style=flat-square)](https://github.com/Flet/semistandard)

TP-Link Smart Home API

**[Changelog](https://github.com/plasticrake/tplink-smarthome-api/tree/master/CHANGELOG.md)**

## Supported Devices

| Model                                    | Type |
|------------------------------------------|------|
| HS100, HS105, HS107, HS110, HS200, HS300 | Plug |
| LB100, LB110, LB120, LB130, LB200, LB230 | Bulb |

## Related Projects

* [TP-Link Smarthome Device Simulator](https://github.com/plasticrake/tplink-smarthome-simulator) - Useful for automated testing
* [TP-Link Smarthome Crypto](https://github.com/plasticrake/tplink-smarthome-crypto)
* [TP-Link Smarthome Homebridge Plugin](https://github.com/plasticrake/homebridge-tplink-smarthome)

## Examples

See more [examples](https://github.com/plasticrake/tplink-smarthome-api/tree/master/examples).

```javascript
const { Client } = require('tplink-smarthome-api');

const client = new Client();
const plug = client.getDevice({host: '10.0.1.2'}).then((device)=>{
  device.getSysInfo().then(console.log);
  device.setPowerState(true);
});

// Look for devices, log to console, and turn them on
client.startDiscovery().on('device-new', (device) => {
  device.getSysInfo().then(console.log);
  device.setPowerState(true);
});
```

## CLI

Install the command line utility with `npm install -g tplink-smarthome-api`. Run `tplink-smarthome-api --help` for help.

## API

[Full API docs can be found here.](https://github.com/plasticrake/tplink-smarthome-api/blob/master/API.md)

For functions that send commands, the last argument is `SendOptions` where you can set the `transport` ('tcp','udp') and `timeout`.

Functions that take more than 3 arguments are passed a single options object as the first argument (and if its a network commmand, SendOptions as the second.)
<!-- markdownlint-disable MD004 MD007 MD009 MD012 MD022 MD024 MD032 MD033 -->
{{#class name="Client"}}{{>member-index}}{{/class}}
{{#class name="Bulb"}}{{>member-index}}{{/class}}
{{#class name="Plug"}}{{>member-index}}{{/class}}

{{#class name="Client"}}
{{>header~}}
{{>body}}
{{>separator~}}
{{>members~}}
{{/class}}

{{#class name="Bulb"}}
{{>header~}}
{{>body}}
{{>separator~}}
{{>members~}}
{{/class}}

{{#class name="Plug"}}
{{>header~}}
{{>body}}
{{>separator~}}
{{>members~}}
{{/class}}

{{#identifier name="SendOptions"}}{{>docs}}{{/identifier}}
{{#identifier name="ResponseError"}}{{>docs}}{{/identifier}}

## Credits

Thanks to George Georgovassilis and Thomas Baust for [figuring out the HS1XX encryption](https://blog.georgovassilis.com/2016/05/07/controlling-the-tp-link-hs100-wi-fi-smart-plug/).

Some design cues for Client based on [node-lifx](https://github.com/MariusRumpf/node-lifx/)
